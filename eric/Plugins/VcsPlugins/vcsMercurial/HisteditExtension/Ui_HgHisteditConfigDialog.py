# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'E:\project\github\eric6-17.08\eric\Plugins\VcsPlugins\vcsMercurial\HisteditExtension\HgHisteditConfigDialog.ui'
#
# Created by: PyQt5 UI code generator 5.9
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_HgHisteditConfigDialog(object):
    def setupUi(self, HgHisteditConfigDialog):
        HgHisteditConfigDialog.setObjectName("HgHisteditConfigDialog")
        HgHisteditConfigDialog.resize(400, 451)
        HgHisteditConfigDialog.setSizeGripEnabled(True)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(HgHisteditConfigDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(HgHisteditConfigDialog)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.defaultButton = QtWidgets.QRadioButton(self.groupBox)
        self.defaultButton.setChecked(False)
        self.defaultButton.setObjectName("defaultButton")
        self.verticalLayout.addWidget(self.defaultButton)
        self.outgoingButton = QtWidgets.QRadioButton(self.groupBox)
        self.outgoingButton.setObjectName("outgoingButton")
        self.verticalLayout.addWidget(self.outgoingButton)
        self.revisionButton = QtWidgets.QRadioButton(self.groupBox)
        self.revisionButton.setChecked(True)
        self.revisionButton.setObjectName("revisionButton")
        self.verticalLayout.addWidget(self.revisionButton)
        self.revisionGroupBox = QtWidgets.QGroupBox(self.groupBox)
        self.revisionGroupBox.setEnabled(True)
        self.revisionGroupBox.setObjectName("revisionGroupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.revisionGroupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.numberButton = QtWidgets.QRadioButton(self.revisionGroupBox)
        self.numberButton.setChecked(False)
        self.numberButton.setObjectName("numberButton")
        self.gridLayout.addWidget(self.numberButton, 0, 0, 1, 1)
        self.numberSpinBox = QtWidgets.QSpinBox(self.revisionGroupBox)
        self.numberSpinBox.setEnabled(False)
        self.numberSpinBox.setAlignment(QtCore.Qt.AlignRight)
        self.numberSpinBox.setMaximum(999999999)
        self.numberSpinBox.setObjectName("numberSpinBox")
        self.gridLayout.addWidget(self.numberSpinBox, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)
        self.idButton = QtWidgets.QRadioButton(self.revisionGroupBox)
        self.idButton.setChecked(True)
        self.idButton.setObjectName("idButton")
        self.gridLayout.addWidget(self.idButton, 1, 0, 1, 1)
        self.idEdit = QtWidgets.QLineEdit(self.revisionGroupBox)
        self.idEdit.setEnabled(True)
        self.idEdit.setObjectName("idEdit")
        self.gridLayout.addWidget(self.idEdit, 1, 1, 1, 2)
        self.tagButton = QtWidgets.QRadioButton(self.revisionGroupBox)
        self.tagButton.setObjectName("tagButton")
        self.gridLayout.addWidget(self.tagButton, 2, 0, 1, 1)
        self.tagCombo = QtWidgets.QComboBox(self.revisionGroupBox)
        self.tagCombo.setEnabled(False)
        self.tagCombo.setEditable(True)
        self.tagCombo.setObjectName("tagCombo")
        self.gridLayout.addWidget(self.tagCombo, 2, 1, 1, 2)
        self.branchButton = QtWidgets.QRadioButton(self.revisionGroupBox)
        self.branchButton.setObjectName("branchButton")
        self.gridLayout.addWidget(self.branchButton, 3, 0, 1, 1)
        self.branchCombo = QtWidgets.QComboBox(self.revisionGroupBox)
        self.branchCombo.setEnabled(False)
        self.branchCombo.setEditable(True)
        self.branchCombo.setObjectName("branchCombo")
        self.gridLayout.addWidget(self.branchCombo, 3, 1, 1, 2)
        self.bookmarkButton = QtWidgets.QRadioButton(self.revisionGroupBox)
        self.bookmarkButton.setObjectName("bookmarkButton")
        self.gridLayout.addWidget(self.bookmarkButton, 4, 0, 1, 1)
        self.bookmarkCombo = QtWidgets.QComboBox(self.revisionGroupBox)
        self.bookmarkCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bookmarkCombo.sizePolicy().hasHeightForWidth())
        self.bookmarkCombo.setSizePolicy(sizePolicy)
        self.bookmarkCombo.setEditable(True)
        self.bookmarkCombo.setObjectName("bookmarkCombo")
        self.gridLayout.addWidget(self.bookmarkCombo, 4, 1, 1, 2)
        self.verticalLayout.addWidget(self.revisionGroupBox)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.forceCheckBox = QtWidgets.QCheckBox(HgHisteditConfigDialog)
        self.forceCheckBox.setEnabled(False)
        self.forceCheckBox.setObjectName("forceCheckBox")
        self.verticalLayout_2.addWidget(self.forceCheckBox)
        self.keepCheckBox = QtWidgets.QCheckBox(HgHisteditConfigDialog)
        self.keepCheckBox.setObjectName("keepCheckBox")
        self.verticalLayout_2.addWidget(self.keepCheckBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(HgHisteditConfigDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)

        self.retranslateUi(HgHisteditConfigDialog)
        self.buttonBox.accepted.connect(HgHisteditConfigDialog.accept)
        self.buttonBox.rejected.connect(HgHisteditConfigDialog.reject)
        self.revisionButton.toggled['bool'].connect(self.revisionGroupBox.setEnabled)
        self.numberButton.toggled['bool'].connect(self.numberSpinBox.setEnabled)
        self.idButton.toggled['bool'].connect(self.idEdit.setEnabled)
        self.tagButton.toggled['bool'].connect(self.tagCombo.setEnabled)
        self.branchButton.toggled['bool'].connect(self.branchCombo.setEnabled)
        self.bookmarkButton.toggled['bool'].connect(self.bookmarkCombo.setEnabled)
        self.outgoingButton.toggled['bool'].connect(self.forceCheckBox.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(HgHisteditConfigDialog)
        HgHisteditConfigDialog.setTabOrder(self.defaultButton, self.outgoingButton)
        HgHisteditConfigDialog.setTabOrder(self.outgoingButton, self.revisionButton)
        HgHisteditConfigDialog.setTabOrder(self.revisionButton, self.numberButton)
        HgHisteditConfigDialog.setTabOrder(self.numberButton, self.numberSpinBox)
        HgHisteditConfigDialog.setTabOrder(self.numberSpinBox, self.idButton)
        HgHisteditConfigDialog.setTabOrder(self.idButton, self.idEdit)
        HgHisteditConfigDialog.setTabOrder(self.idEdit, self.tagButton)
        HgHisteditConfigDialog.setTabOrder(self.tagButton, self.tagCombo)
        HgHisteditConfigDialog.setTabOrder(self.tagCombo, self.branchButton)
        HgHisteditConfigDialog.setTabOrder(self.branchButton, self.branchCombo)
        HgHisteditConfigDialog.setTabOrder(self.branchCombo, self.bookmarkButton)
        HgHisteditConfigDialog.setTabOrder(self.bookmarkButton, self.bookmarkCombo)
        HgHisteditConfigDialog.setTabOrder(self.bookmarkCombo, self.forceCheckBox)
        HgHisteditConfigDialog.setTabOrder(self.forceCheckBox, self.keepCheckBox)

    def retranslateUi(self, HgHisteditConfigDialog):
        _translate = QtCore.QCoreApplication.translate
        HgHisteditConfigDialog.setWindowTitle(_translate("HgHisteditConfigDialog", "Histedit Configuration"))
        self.groupBox.setTitle(_translate("HgHisteditConfigDialog", "Start Revision"))
        self.defaultButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to use the default revision as the base"))
        self.defaultButton.setText(_translate("HgHisteditConfigDialog", "Default Revision"))
        self.outgoingButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to edit all outgoing revisions"))
        self.outgoingButton.setText(_translate("HgHisteditConfigDialog", "All Outgoing"))
        self.revisionButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to use a revision as start point"))
        self.revisionButton.setText(_translate("HgHisteditConfigDialog", "Revision"))
        self.revisionGroupBox.setTitle(_translate("HgHisteditConfigDialog", "Revision"))
        self.numberButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to specify a revision by number"))
        self.numberButton.setText(_translate("HgHisteditConfigDialog", "Number"))
        self.numberSpinBox.setToolTip(_translate("HgHisteditConfigDialog", "Enter a revision number"))
        self.idButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to specify a revision by changeset id"))
        self.idButton.setText(_translate("HgHisteditConfigDialog", "Id:"))
        self.idEdit.setToolTip(_translate("HgHisteditConfigDialog", "Enter a changeset id"))
        self.tagButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to specify a revision by a tag"))
        self.tagButton.setText(_translate("HgHisteditConfigDialog", "Tag:"))
        self.tagCombo.setToolTip(_translate("HgHisteditConfigDialog", "Enter a tag name"))
        self.branchButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to specify a revision by a branch"))
        self.branchButton.setText(_translate("HgHisteditConfigDialog", "Branch:"))
        self.branchCombo.setToolTip(_translate("HgHisteditConfigDialog", "Enter a branch name"))
        self.bookmarkButton.setToolTip(_translate("HgHisteditConfigDialog", "Select to specify a revision by a bookmark"))
        self.bookmarkButton.setText(_translate("HgHisteditConfigDialog", "Bookmark:"))
        self.bookmarkCombo.setToolTip(_translate("HgHisteditConfigDialog", "Enter a bookmark name"))
        self.forceCheckBox.setToolTip(_translate("HgHisteditConfigDialog", "Select to force outgoing"))
        self.forceCheckBox.setText(_translate("HgHisteditConfigDialog", "Force outgoing"))
        self.keepCheckBox.setToolTip(_translate("HgHisteditConfigDialog", "Select to keep old nodes"))
        self.keepCheckBox.setText(_translate("HgHisteditConfigDialog", "Keep old nodes"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    HgHisteditConfigDialog = QtWidgets.QDialog()
    ui = Ui_HgHisteditConfigDialog()
    ui.setupUi(HgHisteditConfigDialog)
    HgHisteditConfigDialog.show()
    sys.exit(app.exec_())

